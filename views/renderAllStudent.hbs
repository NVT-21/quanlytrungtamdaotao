<main>
    <h1>Danh sách học viên</h1>
    <button class="add-btn" onclick=" window.location.href='/views/registerStudent  '">Thêm học viên</button> <!-- Thêm nút thêm khóa học -->
  
    {{!-- <div class="filter-container">
    <label for="filter-select">Lọc theo:</label>
    <select id="filter-select">
        <option value="all">Tất cả</option>
        <!-- Thêm các tùy chọn lọc khác tại đây -->
    </select> --}}
</div>
    <div class="course-list">
        {{#each register}}
            <div data-id="{{idCourse}}" class="course-card">
                <!-- Thông tin của khóa học -->
                <h2>Tên: {{student.Name}}</h2>
                <p>Giới tính: {{student.Sex}}</p>
                <p>Ngày sinh:{{student.BirthDay}}</p>
                <p>Trạng thái:{{Status}}</p>
                    {{#if classes.Name}}
                    <p>lớp học: {{classes.Name}}</p>
                    {{/if}}
                <p>khóa học :{{course.Name}}</p>
                 <button class="edit-btn" onclick="window.location.href='/views/editCourse/{{idCourse}}'">Điểm danh</button>
            </div>
        {{/each}}
        </div>
      <div id="pagination" class="pagination">
        <button class="prev-btn" onclick="navigatePreviousPage()" >Trang trước</button>
        <span>Page {{currPage}} of {{totalPage}}</span>
        <button class="next-btn" onclick="navigateNextPage()" >Trang kế</button>
    </div>
   
</main>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    


// Hiển thị lại phần phân trang

</script>
<script>
   document.querySelector(".search-container .search-btn").addEventListener("click", function() {
    const searchInput = document.querySelector(".search-container .search-input").value;
   
      window.location.href = `/views/getAllStudents?name=${searchInput}`

    // Thực hiện request GET sử dụng Axios
    {{!-- axios.get(`http://localhost:3000/course/search?name=${searchInput}`, {
        withCredentials: true
    })
    .then(response => {

        console.log('Dữ liệu tìm kiếm:', response.data);
        // Xử lý dữ liệu tìm kiếm ở đây
    })
    .catch(error => {
        console.error('Có lỗi xảy ra khi tìm kiếm:', error);
        // Xử lý lỗi ở đây
    }); --}}
});


    
</script>
<script>
    function navigatePreviousPage() {
    var currentPage = {{currPage}};
    var previousPage = currentPage - 1;
    if (previousPage <= 0) {
        previousPage = 1;
    }

    // Lấy giá trị của tham số 'name' từ URL
    var currentUrl = window.location.href;
    var url = new URL(currentUrl);
    var name = url.searchParams.get('name');

   let newUrl
    if(name){
       newUrl   = '/views/getAllStudents?name=' + encodeURIComponent(name) + '&page=' + previousPage;
    }
    else{
        newUrl = '/views/getAllStudents'+ '?page=' + previousPage
    }


    // Chuyển đến trang mới
    window.location.href = newUrl;
}


   function navigateNextPage() {
    var currentPage = {{currPage}};
    var nextPage = currentPage + 1;
    const totalPages = {{totalPage}};
    if (nextPage > totalPages) {
        nextPage = totalPages; // Đảm bảo không vượt quá số trang tối đa
    }

    // Lấy giá trị của tham số 'name' từ URL hiện tại
    var currentUrl = window.location.href;
    var url = new URL(currentUrl);
    var name = url.searchParams.get('name');

    // Tạo URL mới bao gồm tham số 'name' và 'page' cho trang tiếp theo
   let newUrl;
    if(name){
       newUrl   = '/views/getAllStudents?name=' + encodeURIComponent(name) + '&page=' + nextPage;
    }
    else{
        newUrl = '/views/getAllStudents'+ '?page=' + nextPage
    }

    // Chuyển đến trang mới
    window.location.href = newUrl;
}
</script>



